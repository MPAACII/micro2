Lab 4 - Instructions:


—————  Given:  ——————————
server.py 

It is a HTTP server and handles POST requests. (you can use in your client side curl library to upload an image file to the HTTP server using POST method)
It open the port 8000 to accept requests

 +++ use the server script on your local machine:
Navigate with your browser to “http://localhost:8000” and you'll see an empty table of groups. 



————— Develop your own HTTP client to send the data to the server: ——————

client.c 

- Sample Code is given
- Test Image is given

You should use the port 8000 to connect to the server and send your POST request.

Study and Use curl library to implement your web requests.


If you are running server.py script on your local machine: 
   - step 1. : find your computer IP address 
   - step 2. : find your Galileo board IP address using the command “ifconfig”
   - step 3. : modify your client.c application including you computer local IP address
   - step 4. : use ssh to transfer your client.c application to your galileo 
   - step 5. : Run the server.py script on your computer
   - step 6. : Compile your client.c application on your galileo (remember you need to use curl library to develop the web client), compiling example: “gcc myClient.c -lcurl -0 myClient” 
   - step 7. : Run your application on the galileo,  example:  “./myClient”

If the server is up: you will see an empty data table in blue color showing “ID, Group Name , Value, Status, Last Update, Image” fields


— curl library uses the URL to send data to the server. Make sure you include this URL format to your POST request:  "http://servername_variable:portnumber_variable/update?id=var_xxxx&password=var_xxxx&name=var_xxxx&data=var_xxxx&status=var_xxxx&timestamp=var_xxxx&filename=var_xxxx" 



—————  Develop your own thread in C ————

Use POSIX Threads , use the given link or any other you find about POSIX





——— Networking 

Use your home router and make sure the port 8000 is open (Port Forwarding)
Use your smartphone as a WiFi hot-spot 
Use the “eduroam” wifi but it is not guaranteed that the port is open , but you can change the default 8000 service port to 80 from the server and your client too

Be aware the firewall is the basic problem if you see the server app runs locally but you can not see it from another computer on the same network.
Test:  

One laptop runs server.py (with all the directories as given) 
check your local one:  Navigate with your browser to “http://localhost:8000” and you'll see an empty table of groups. 
(if not there is very basic issue, check your files structure if they are as given)

Connect your laptop to your WiFi access point 

Connect a second laptop to the same Wifi access point 
Navigate with your browser on the second laptop “http://1st_laptop_IP_Address:8000” and you'll see an empty table of groups. 
(replace this “1st_laptop_IP_Address”  with the IP address of the initial laptop that runs the server script)
If it doesn’t work turn off the firewall and try again or open the 8000 port





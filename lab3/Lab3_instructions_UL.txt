
Micro2  - LAB 3  Instructions and Materials:


NOTE: All the required hardware components are provided by the TA of Micro2 Ioannis Smanis
Materials for lab 3:  1x Temperature sensor , 1x Galileo wi-fi cards , 2x Wi-Fi antennas, 1x Usb Web camera



*********************************************
Temperature sensor : Texas Instruments TMP102 
Power Supply: 3.3V MAX (Please do not exceed this limit)
Interface: I2C  (3.3V tolerance)
Device Address:  (Default Address 0x48) To change the default I2C address use the instructions included in the schematics

PIN OUT:
SDA: I2C Data  Line  (3.3V tolerance)
SCL: I2C Clock Line  (3.3V tolerance)
VCC: 3.3V
GND: Ground

Hooking up Temperature Sensor on Galileo Board: there is no need for pull-up resistors on the I2C lines 
For your Interest : This sensor is used for Samsung Galaxy S5 in order to support all the smart scroll/swipe gestures 

source:  https://www.sparkfun.com/products/13314





*******************************************
WARNING !!!!  WARNING !!!! WARNING !!!! WARNING !!!! WARNING !!!! WARNING !!!!
*******************************************

It is mandatory to solder the sensor breakout-pins to Pin header in order to snap it on your breadboard.
pin header (2.54mm pitch): https://www.sparkfun.com/products/10158

Soldering station is in the Lab room #424
(Ask Ms Senait Haileselassie [Senait_Haileselassie@uml.edu, next door from the lab] for pin header and soldering wire)

It is your responsibility to keep the I2C in working condition. 
If you burn or damage the I2C device you need to replace it with a new one. 

*******************************************
WARNING !!!!   WARNING !!!!  WARNING !!!!   WARNING !!!!  WARNING !!!!  WARNING !!!!  
*******************************************




--------  USBtoUART cable:
******************************************
Interface: UART

Pin Out:
Green  Wire: RTS (3.3V tolerance)
Yellow Wire: RX Data Line (3.3V tolerance)
Orange Wire: TX Data Line (3.3V tolerance)
Red    Wire: 5V   
Brown  Wire: CTS (3.3V tolerance)
Black  Wire: Ground




-------- USB 2.0 Web-Camera 

-------- PCI-Express Galileo WiFi Card + 2 Antennas


— — — — — —  Use the latest Yocto Linux image file

Download: Latest yocto image file from source  https://software.intel.com/en-us/iot/hardware/galileo/downloads
Make Bootable SD card and restore the image file in the card:   https://software.intel.com/en-us/get-started-galileo-linux-step1
Instructions: accessing the root path of the SD card using the new Yocto image you need to browse to this path:  “/media/card”  





———————- Putting the Galileo to the Network : Wi-Fi card / Ethernet Port ——

Step 1. Install the wi-fi hardware on the PCI-express socket on the back of the Intel Galileo Gen2 board  (Very gently connect the white and the black antenna-wires on the WiFi card)
Step 2. to connect to the Wi-Fi network see the given guide "Galieo_Wifi_Connection.pdf"
Step 3. when you are done , you can use an SSH client to connect to the Galileo board without the need of the USB-to-Serial cable anymore. (If you are experiencing Galileo password issues connecting your SSH client with the Galileo , use generic linux commands to set a super user password to your board , and try your SSH client again)
step 4. If you are using wi-fi to connect the board to the network , you still can use SSH protocol to connect your computer to the Galileo board (UNIX OS computers can already use ssh command to connect without additional software. For windows users use Putty as an SSH client)

Useful link on that topic: http://www.hofrock.com

Connecting Galileo on Eduroam  wifi :  edit  “eduroam.config”  file applying your credentials and save it in “/var/lib/connman/“ Galileo’s directory



———————-  Using the web camera - Hints

Useful resources: 
http://www.instructables.com/id/Galileo-Monochrome-Webcam-Display-System/?ALLSTEPS
https://communities.intel.com/thread/54923  
https://communities.intel.com/thread/56024
http://i-am-gabi.github.io/take-a-picture-opencv-galileo  (useful for debugging your camera - in Pyhton)

NOTE: You need to use modules such as OpenCV in order to handle the camera which is embedded in the new yocto image

step 1. boot your yocto OS on your Galileo board 
step 2. connect your given web camera to the USB Host port on the Galileo
step 3. use ssh client via network or USB-to-Serial cable to manage your Galileo board
step 4. check if your camera is connected to your Galileo board: browse to the "/dev" directory and type "ls" to see the device list of your board. You should see a device called "video0"
step 5. develop your own .cpp file (C++ code) for taking pictures and video using the web camera and the given I2C Sensor device (Temperature or Gesture sensor) as the trigger for the camera. Be creative and make your own scenario to trigger your camera using the given sensor. 
———————- 



